name: Run Chrome Tests and Publish Allure & HTML Reports

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

env:
  PYTHON_VERSION: '3.10'
  ALLURE_VERSION: '2.35.1'

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Upgrade pip & Install test dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path 'requirements.txt') {
            python -m pip install -r requirements.txt
          } else {
            Write-Host "requirements.txt not found, skipping"
          }
          # Ensure test/reporting packages & driver manager are present
          python -m pip install allure-pytest pytest-html webdriver-manager pytest-rerunfailures

      - name: Create output directories
        shell: pwsh
        run: |
          if (-not (Test-Path allure-results)) { New-Item -ItemType Directory -Path allure-results | Out-Null }
          if (-not (Test-Path allure-report)) { New-Item -ItemType Directory -Path allure-report | Out-Null }
          if (-not (Test-Path report)) { New-Item -ItemType Directory -Path report | Out-Null }
          if (-not (Test-Path site)) { New-Item -ItemType Directory -Path site | Out-Null }

      - name: Run Pytest (Allure results + pytest-html; retry flaky tests once)
        shell: pwsh
        run: |
          # This run calls your conftest.py which creates a Chrome instance and maximizes the window.
          # --reruns 1 will retry a single transient test failure automatically.
          python -m pytest --alluredir=allure-results --html=report/pytest-report.html --self-contained-html -v --maxfail=1 --disable-warnings --reruns 1 --reruns-delay 2

      - name: Install Allure CLI (Windows) and export envs
        shell: pwsh
        run: |
          $version = "${{ env.ALLURE_VERSION }}"
          $workspace = "${{ github.workspace }}"
          $destRoot = Join-Path $workspace 'allure'
          $zip = Join-Path $env:TEMP "allure-$version.zip"
          $url = "https://github.com/allure-framework/allure2/releases/download/$version/allure-$version.zip"
          try { Invoke-WebRequest -Uri $url -OutFile $zip -UseBasicParsing -ErrorAction Stop } catch { Write-Error "Download failed: $_"; exit 1 }
          if (Test-Path $destRoot) { Remove-Item -Recurse -Force $destRoot }
          New-Item -ItemType Directory -Path $destRoot | Out-Null
          Expand-Archive -LiteralPath $zip -DestinationPath $destRoot -Force
          $firstFolder = Get-ChildItem -Directory $destRoot | Select-Object -First 1
          if ($null -eq $firstFolder) { Write-Error "Allure extraction failed"; exit 1 }
          $allureHome = $firstFolder.FullName
          Add-Content -Path $env:GITHUB_ENV -Value "ALLURE_HOME=$allureHome"
          Add-Content -Path $env:GITHUB_ENV -Value "PATH=$allureHome\bin;$env:PATH"

      - name: Debug listing before generating reports
        shell: pwsh
        run: |
          Write-Host "Workspace root:"
          Get-ChildItem -Force | Format-Table
          Write-Host "Allure results:"
          if (Test-Path allure-results) { Get-ChildItem -Recurse allure-results | Select-Object FullName,Length | Format-Table -AutoSize } else { Write-Warning "allure-results missing" }
          Write-Host "pytest-html report:"
          if (Test-Path report) { Get-ChildItem -Recurse report | Select-Object FullName,Length | Format-Table -AutoSize } else { Write-Warning "report folder missing" }

      - name: Generate Allure HTML report
        shell: pwsh
        run: |
          if (-not (Test-Path "allure-results") -or ((Get-ChildItem -Recurse allure-results | Measure-Object).Count -eq 0)) {
            Write-Warning "No Allure results found â€” skipping Allure HTML generation."
            exit 0
          }
          & "$env:ALLURE_HOME\bin\allure.bat" generate allure-results -o allure-report --clean
          Get-ChildItem -Recurse allure-report | Select-Object FullName,Length | Format-Table -AutoSize

      - name: Fix Allure index base href (make resources load correctly)
        shell: pwsh
        run: |
          $index = Join-Path $PWD 'allure-report\index.html'
          if (Test-Path $index) {
            $content = Get-Content -Raw -Path $index
            $new = $content -replace '(?i)(<head\b[^>]*>)', '$1`n    <base href="./">'
            Set-Content -Path $index -Value $new -Encoding UTF8
          } else {
            Write-Warning "allure index not found; skipping base href fix"
          }

      - name: Prepare site folder (include both reports)
        shell: pwsh
        run: |
          if (Test-Path site) { Remove-Item -Recurse -Force site }
          New-Item -ItemType Directory -Path site | Out-Null
          if (Test-Path allure-report) {
            New-Item -ItemType Directory -Path site\allure-report | Out-Null
            Copy-Item -Recurse -Force -Path (Join-Path $PWD 'allure-report\*') -Destination (Join-Path $PWD 'site\allure-report')
          }
          if (Test-Path report\pytest-report.html) {
            New-Item -ItemType Directory -Path site\pytest-report | Out-Null
            Copy-Item -Path (Join-Path $PWD 'report\pytest-report.html') -Destination (Join-Path $PWD 'site\pytest-report\index.html')
          }
          Get-ChildItem -Recurse site | Select-Object FullName,Length | Format-Table -AutoSize

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Upload HTML reports
        uses: actions/upload-artifact@v4
        with:
          name: html-reports
          path: |
            allure-report
            report

      - name: Deploy site (Allure + pytest HTML) to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site
          publish_branch: gh-pages
